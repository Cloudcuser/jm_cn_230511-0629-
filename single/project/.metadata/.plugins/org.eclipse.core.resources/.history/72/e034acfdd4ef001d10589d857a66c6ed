package com.cafeprojF;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.*;	

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.cafeprojF.www.CafememberInfoDTO;

@WebServlet("/CafememberInfoDAO")
public class CafememberInfoDAO extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
	
	
	
	private final String sId = "root";
	private final String sPw = "1234";
	private final String url = "jdbc:mysql://localhost:3306/nicedb?serverTimezone=UTC";
	private final String driver = "com.mysql.cj.jdbc.driver";
    public CafememberInfoDAO() {
        super();
        try {
        	Class.forName(driver);
        }
        catch(ClassNotFoundException e) {
        	System.out.println("멤버DAO 드라이버 로드 실패");
        }
        
    }
	public ArrayList<CafememberInfoDTO> selectBoard(){
		String query = "select id, pw, nickname, hobby, regDate, lastComeDate, acntFindQuestion, "
				+ "acntFindAnswer, isStaff";
		ArrayList<CafememberInfoDTO> list = new ArrayList<>();
		try 
			(
				Connection conn = DriverManager.getConnection(url, sId, sPw);
				PreparedStatement pstmt = conn.prepareStatement(query);
				ResultSet rs = pstmt.executeQuery();
			)			
		{
			System.out.println("멤버DAO select : 커넥션 객체 생성 성공");
			
			while(rs.next()) {
				CafememberInfoDTO cmiDTO = new CafememberInfoDTO();
				cmiDTO.setId(rs.getString("id"));
				cmiDTO.setPw(rs.getString("pw"));
				cmiDTO.setNickname(rs.getString("nickname"));
				cmiDTO.setHobby(rs.getString("hobby"));
				cmiDTO.setRegDate(rs.getString("regDate"));
				cmiDTO.setLastComeDate(rs.getString("lastComeDate"));
				cmiDTO.setAcntFindQuestion(rs.getString("acntFindQuestion"));
				cmiDTO.setAnctFindAnswer(rs.getString("acntFindAnswer"));
				cmiDTO.setIsStaff(rs.getInt("isStaff"));
				
				list.add(cmiDTO);
			}
		
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return list;
	}
    public int insertInfo(CafememberInfoDTO cmiDTO) {
    	String query = "insert into cafememberinfo(id, pw, nickname,"+
    			"hobby, acntFindQuestion, acntFindAnswer) value(?,?,?,?,?,?)";
    		
		return 0;
    	
    }
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	}

}
